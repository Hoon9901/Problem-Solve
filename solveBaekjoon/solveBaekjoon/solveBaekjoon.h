#pragma once
#include<bits/stdc++.h> //
using namespace std;

// 사용자 정의 함수
namespace SwExpert {
	//void p1868();
}
namespace baekjoon {
	/*void p1032();
	void p1110();
	void p1143();*/
	//void p1157();
	//void p1236();
	//////////////////// 반복문
	//void p2739();
	//void p10950();
	//void p8393();
	//void p15552();
	//void p11021();
	//void p11022();
	//void p2438();
	//void p2439();
	//void p10871();
	//void p2669();
	/*void p1075();*/
	//void p3052(); // GOOD STUDY, 같은 수 있을시 (중복) 어떻게 처리하는지.
	//void p1546(); 
	//void p8958(); // 문자 접근법
	//void p4344(); // 
	//void p15996();
	//void p4673();
	//void p1065(); // 한수
	//void p11654();
	//void p10809(); // fill_n(초기화할 배열, 길이, 값) 초기화
	//void p2675();
	//void p1152();
	//void p2908(); // use string += operator, char to int
	//void p5622();
	//void p2941();
	//void p1316(); // 문자 중복처리, 연속적이다가 비연속 문자일시 그룹단어
	//void p2475();
	//void p1018();   // 브루트포스 체스 판 재색칠
	// 수학 알고리즘
	//void p1712();
	//void p2292();
	//void p1193();
	/*void p2869();*/
	//void p10250();
	//void p10757();		// 큰 수 다시풀어볼거
	//void p1259();		// 펠린드롬수
	//void p1920();		// 이분탐색
	//void p10180();
	//void p1978();		// 소수찾기, 에라토스테네스의 체
	void p2164();		// 큐

	namespace 출력 {
		//void cat();
		//void multiple();
	}
	namespace 조건문 {
		//void p_1330();
		//void p_9498();
		//void p_2753();
		//void p_14681();
		//void p_2884();
	}
}
